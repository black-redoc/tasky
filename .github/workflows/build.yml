name: Build and test app

on:
  pull_request:
    branches: ["master"]
jobs:
  lint-fastapi:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install requirements
        run: |
          cd backend
          pip install -r requirements.txt
      - name: Linter
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  test-fastapi:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install requirements
        run: |
          pip install -r backend/requirements.txt
      - name: Test with tox
        run: |
          export ENVIRONMENT=test
          cd backend
          tox
  lint-astro:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: "20.13.1"
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: |
          cd frontend
          pnpm install
      - name: Linter
        run: |
          cd frontend
          pnpm eslint
